name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies
        run: dotnet restore SportSpot.sln

      - name: Build Backend
        run: dotnet build SportSpot/SportSpot.csproj -c Release

      - name: Exceute Unit Tests
        run: dotnet test SportSpot-Test/SportSpot-Test.csproj -v n
  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    env:
      RUN_OAUTH_TEST: true
      AZURE_MAPS_SUBSCRIPTION_KEY: ${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Development.env
        run: |
          echo "Updating Development.env"
          sed -i 's|^OAUTH_GOOGLE_USER_INFORMATION_ENDPOINT=.*|OAUTH_GOOGLE_USER_INFORMATION_ENDPOINT=http://restemulator:8083/oauth|' Development.env
          cat Development.env

      - name: Create Subscription.env
        run: |
          echo "Creating Subscription.env"
          echo "AZURE_MAPS_SUBSCRIPTION_KEY=${{ secrets.AZURE_MAPS_SUBSCRIPTION_KEY }}" > Subscription.env

      - name: Run Services
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: "docker-compose.override.yml"

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies
        run: dotnet restore SportSpot.sln

      - name: Exceute Integration Tests
        run: dotnet test Integration-Test/Integration-Test.csproj -v n
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build, integration]
    defaults:
      run:
        working-directory: "./SportSpot"
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Build Docker Image
        run: docker build . --tag ${{ secrets.CONTAINER_REGISTRY_URL }}/sportspot:latest
      - name: Push Docker Image
        run: docker push ${{ secrets.CONTAINER_REGISTRY_URL }}/sportspot:latest
